name: Windows

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches: [master]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: Deploy on Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: lukka/run-vcpkg@main
        id: runvcpkg
        with:
          setupOnly: true
          vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'

      - name: Install deps
        run: $VCPKG_ROOT/vcpkg install @$VCPKGRESPONSEFILE
        shell: bash

      - name: Configure VKAPI Library CMake
        run: cmake -B ${{ github.workspace }}/build -DBUILD_EXAMPLES=OFF -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build VKAPI Library
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      - name: Install VKAPI Library
        run: cmake --build ${{ github.workspace }}/build --target install --config ${{ env.BUILD_TYPE }}

      # Configure, Build and Install WE - With Examples
      - name: Configure VKAPI Library CMake WE
        run: cmake -B ${{ github.workspace }}/build -DBUILD_EXAMPLES=ON -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build VKAPI Library WE
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

      - name: Install VKAPI Library WE
        run: cmake --build ${{ github.workspace }}/build --target install --config ${{ env.BUILD_TYPE }}

      - name: Test
        working-directory: ${{ github.workspace }}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{ env.BUILD_TYPE }}
